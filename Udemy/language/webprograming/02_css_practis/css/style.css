@charset "utf-8";

body {
    background-color: gray;
}

.block {
    background-color: green;
    width: 500px;
    height: 500px;
    margin-top: 10px;
    margin-left: 10px;
    padding: 20px;
    padding-top: 100px;
    padding: 20px 40px;
    display: none;
}

.inner {
    background-color: pink;
    width: 100%;
    height: 100%;
}


/* display practice */
.btn {
    margin: 1em;
    padding: 3em;
    background-color: orange;
    display: inline-block;
    border-radius: 20px;  /* 角を丸める */
    padding: 5px 10px;    

}

/* flex practice*/
.container {
    background-color: white;
    width: 1000px;
    height: 500px;
    display: flex;
    flex-wrap: wrap;         /* 折り返してくれる */
    align-items: center;     /* defaultはストレッチで勝手に高さを捕捉してくれる */
    align-content: center;   /*上に揃える */
    justify-content: center; /* 揃える位置を指定 :?
    flex-direction: column;  /* 縦方向に*/
    display: none;
}

.item {
    background-color:  pink;
    width: 100px;
    margin: 20px;
    
}

/*  position */
/* positonは基本的に一つの要素の位置を指定
   display-flexは複数の要素の位置を指定 */
.parent {
    background-color: white;
    width: 1000px;
    height: 500px;
    /* 親はrelativeにする どこに対して動かすのか子がわからなくなるため 
       absoluteとセットで指定する */
    position: relative;
}

.child {
    background-color: blue;
    width: 100px;
    height: 100px;
    color: white;
    position: absolute;
    left: 40px;
    top: 40px;
    z-index: 2;

}
.child2 {
    background-color: green;
    width: 100px;
    height: 100px;
    color: white;
    position: absolute;
    left: 50px;
    top: 50px;
    z-index: 3;

}
.child3 {
    background-color: red;
    width: 100px;
    height: 100px;
    color: white;
    position: absolute;
    left: 60px;
    top: 60px;
    z-index: 1;

}